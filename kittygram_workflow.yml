name: CI/CD for Kittygram

on:
  push:
    branches:
      - main

jobs:
  tests:
    name: Check PEP8
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install flake8

      - name: Run PEP8 check
        run: |
          flake8 .

  build:
    name: Push to DockerHub
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build backend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/kittygram_backend:latest backend
          docker push ${{ secrets.DOCKER_USERNAME }}/kittygram_backend:latest

      - name: Build frontend image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/kittygram_frontend:latest frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/kittygram_frontend:latest

      - name: Build and push gateway image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/kittygram_gateway:latest nginx
          docker push ${{ secrets.DOCKER_USERNAME }}/kittygram_gateway:latest

  deploy:
    name: Deploy to remote server
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_KEY }}

      - name: Deploy application
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.SSH_USER }}@${{ secrets.SERVER_IP }} << 'EOF'
          cd ~/ktgrm-test
          sudo docker-compose -f docker-compose.production.yml pull
          sudo docker-compose -f docker-compose.production.yml down
          sudo docker-compose -f docker-compose.production.yml up -d
          sudo docker-compose -f docker-compose.production.yml exec -T backend python manage.py collectstatic --noinput
          sudo docker-compose -f docker-compose.production.yml exec -T backend python manage.py migrate
          EOF

  auto_tests:
    name: Run Auto Tests
    runs-on: ubuntu-latest
    needs: deploy
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install pytest pyyaml requests
      
      - name: Run backend tests
        run: |
          pytest

  notify_in_telegram:
    name: Notify in Telegram
    runs-on: ubuntu-latest
    needs: auto_tests
    steps:
      - name: Send Telegram Notification
        uses: appleboy/telegram-action@v1.0.1
        with:
          to: ${{ secrets.TG_CHAT_ID }}
          token: ${{ secrets.TG_TOKEN }}
          message: "Kittygram version successfully passed auto-tests and has been deployed! Commit: https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
